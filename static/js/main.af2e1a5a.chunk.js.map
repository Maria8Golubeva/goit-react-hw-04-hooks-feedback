{"version":3,"sources":["Components/Feedback/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js","Components/Feedback/styles.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","buttonNames","Object","keys","map","item","className","styles","btn","onClick","Math","floor","random","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","defaultProps","Notification","message","App","useState","setGood","setNeutral","setBad","totalScores","reduce","acc","evt","stateName","target","textContent","prev","percentage","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPA8BeA,MA3Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAM5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,mCACGE,EAAYG,KAAI,SAAAC,GAAI,OACnB,wBACEC,UAAWC,IAAOC,IAElBC,QAAST,EAHX,SAKGK,GAZAK,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,SCqBhCC,MAzBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,gDAAmBC,KAClBC,EAEC,mDAAsBA,EAAtB,OAEA,2DCXR,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,KAKPF,EAAQG,aAAe,CACrBF,MAAO,cAQMD,QClBf,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,IAGbD,EAAaD,aAAe,CAC1BE,QAAS,iBAMID,QCsDAE,MA7Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KA8BIC,EAZc,CAAChB,EAAMC,EAASC,GACjBe,QAAO,SAACC,EAAK3B,GAAN,OAAgB2B,EAAO3B,IAAO,GAYxD,OACE,qCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACArB,QAAS,CAAEe,OAAMC,UAASC,OAC1BhB,gBAlCc,SAACiC,GACnB,IAAMC,EAAYD,EAAIE,OAAOC,YACX,SAAdF,GACFP,GAAQ,SAAAU,GAAI,OAAIA,EAAO,KAGP,YAAdH,GACFN,GAAW,SAAAS,GAAI,OAAIA,EAAO,KAGV,QAAdH,GACFL,GAAO,SAAAQ,GAAI,OAAIA,EAAO,UA2BtB,cAAC,EAAD,CAASjB,MAAM,aAAf,SACIU,EAIF,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,EACPZ,mBA5BgC,SAAAD,GACtC,GAAc,IAAVA,EACF,OAAO,EAET,IAAMqB,EAAc,IAAMrB,EAASH,EACnC,OAAOJ,KAAKC,MAAM2B,GAuBQC,CAAgCT,KAPtD,cAAC,EAAD,CAAcN,QAAQ,4B,YC9C5BgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCT5BC,EAAOC,QAAU,CAAC,IAAM,uB","file":"static/js/main.af2e1a5a.chunk.js","sourcesContent":["import styles from './styles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n\r\n  const generateId = () => {\r\n    return Math.floor(Math.random() * 10000) + 1;\r\n  };\r\n\r\n  const buttonNames = Object.keys(options);\r\n  return (\r\n    <>\r\n      {buttonNames.map(item => (\r\n        <button\r\n          className={styles.btn}\r\n          key={generateId()}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <h3>Total Scores: {total}</h3>\r\n      {positivePercentage\r\n        ?\r\n        <h3>Positive scores: {positivePercentage}%</h3>\r\n        : \r\n        <h3>Positive scores: none</h3>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: 'Your title',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: 'empty message',\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\r\nimport FeedbackOptions from './Components/Feedback/';\r\nimport Statistics from './Components/Statistics';\r\nimport Section from './Components/Section';\r\nimport Notification from './Components/Notification';\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\nconst clickHandle = (evt) => {\r\n  const stateName = evt.target.textContent;\r\n  if (stateName === 'good') {\r\n    setGood(prev => prev + 1);\r\n  };\r\n\r\n  if (stateName === 'neutral') {\r\n    setNeutral(prev => prev + 1);\r\n  };\r\n\r\n  if (stateName === 'bad') {\r\n    setBad(prev => prev + 1);\r\n  };\r\n};\r\n\r\nconst countTotalFeedBack = () => {\r\n  const allScores = [good, neutral, bad];\r\n  return allScores.reduce((acc, item) => (acc += item), 0);\r\n};\r\n\r\nconst countPositiveFeedbackPercentage = total => {\r\n  if (total === 0) {\r\n    return 0;\r\n  }\r\n  const percentage = (100 / total) * good;\r\n  return Math.floor(percentage);\r\n};\r\n\r\nconst totalScores = countTotalFeedBack();\r\nreturn (\r\n  <>\r\n    <Section title=\"Please leave feedback\">\r\n      <FeedbackOptions\r\n      options={{ good, neutral, bad }}\r\n      onLeaveFeedback={clickHandle}\r\n      />\r\n    </Section>\r\n\r\n    <Section title=\"Statistics\">\r\n      {!totalScores\r\n      ?\r\n      <Notification message=\"No feedback given\" />\r\n      :\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={totalScores}\r\n        positivePercentage={countPositiveFeedbackPercentage(totalScores)}\r\n      />\r\n      }\r\n    </Section>\r\n  </>\r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2t-91\"};"],"sourceRoot":""}